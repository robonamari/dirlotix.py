name: Download and Deploy Release to preview branch

on:
  workflow_run:
    workflows: ["Auto Release"]
    types:
      - completed

permissions:
  contents: write

jobs:
  deploy-preview:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout preview branch
        uses: actions/checkout@v5
        with:
          ref: preview
      - name: Get latest release tag
        run: echo "TAG_NAME=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases | jq -r '.[0].tag_name')" >> $GITHUB_ENV
      - name: Clean preview directory
        run: find . -mindepth 1 ! -regex '^./\.git\(/.*\)?' -exec rm -rf {} +
      - name: Download and extract release
        run: |
          ASSET_URL=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/tags/${{ env.TAG_NAME }} \
            | jq -r '.assets[] | select(.name | test("^Dirlotix-.*\\.zip$")) | .browser_download_url' | head -n 1)
          [ -z "$ASSET_URL" ] && echo "‚ùå No matching asset found." && exit 1
          ZIP_NAME=$(basename "$ASSET_URL")
          curl -sL "$ASSET_URL" -o "$ZIP_NAME"
          unzip -q "$ZIP_NAME" -d .
          rm "$ZIP_NAME"
      - name: Create downloads folder
        shell: bash
        run: |
          mkdir -p downloads
          shopt -s extglob
          cp -r !(downloads) downloads/
      - name: Commit and push changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Deploy release ${{ env.TAG_NAME }} to preview branch"
          git push origin preview
